name: Pull Request Pipeline

on:
  push:
    branches:
      - main

jobs:
  test-code:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask requests

    - name: Run Flask app in the background
      run: |
        nohup python app.py &
        sleep 5  # wait for the server to start

    - name: Test client script
      run: |
        python client.py

  check-variables:
    runs-on: ubuntu-latest
    needs: test-code

    env:
      SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
      RECIPIENT_PASWD: ${{ secrets.RECIPIENT_PASWD }}
      RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Check environment variables
      run: |
        echo "SENDER_EMAIL: $SENDER_EMAIL"
        echo "RECIPIENT_PASWD: $RECIPIENT_PASWD"
        echo "RECIPIENT_EMAIL: $RECIPIENT_EMAIL"

  send-email:
    runs-on: ubuntu-latest
    needs: [test-code, check-variables]

    env:
      SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
      RECIPIENT_PASWD: ${{ secrets.RECIPIENT_PASWD }}
      RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Run email script if tests pass
      run: |
        python send_email.py
